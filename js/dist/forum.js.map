{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAoC;AAIpC;AACA;AACA;AACO,IAAMC,SAAS,GAAG,0BAA0B;;AAEnD;AACA;AACA;AACA;AACO,SAASC,GAAGA,CAACA,GAAW,EAAU;EACvC,OAAUD,SAAS,SAAIC,GAAG,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,KAAKA,CAACC,EAAU,EAAEC,UAAgC,EAAO;EAAA,IAAvCA,UAAgC;IAAhCA,UAAgC,GAAG,CAAC,CAAC;EAAA;EACrE,OAAON,mEAAc,CAACI,KAAK,CAACF,GAAG,CAACG,EAAE,CAAC,EAAEC,UAAU,CAAC;AAClD;AAEA,iEAAe;EACbL,SAAS,EAATA,SAAS;EACTC,GAAG,EAAHA,GAAG;EACHE,KAAK,EAALA;AACF,CAAC;;;;;;;;;;;;;;;;;;;AC9B4C;AACA;AAE7C,iEAAe,CACb,IAAII,sEAAY,CAACC,kEAAI,CAAC,CAACE,SAAS,CAAU,gBAAgB,CAAC,CAC5D;;;;;;;;;;;;;;;;;;;;;;;ACLkC;AACC;AACQ;AACoB;AAEnB;AAE7CX,oEAAgB,CAACgB,GAAG,CAACf,8CAAS,EAAE,YAAM;EAEpCW,4DAAM,CAACC,uFAAsB,EAAE,cAAc,EAAE,UAAUK,KAAK,EAAE;IAC9D,IAAI,CAAC,IAAI,CAACC,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE;MAC/BF,KAAK,CAACG,MAAM,CAAC,aAAa,CAAC;IAC7B;EACF,CAAC,CAAC;AAEJ,CAAC,CAAC;;;;;;;;;;;ACfF;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACN6B","sources":["webpack://@imdong/flarum-ext-anti-change-email/./src/common/index.ts","webpack://@imdong/flarum-ext-anti-change-email/./src/forum/extend.ts","webpack://@imdong/flarum-ext-anti-change-email/./src/forum/index.ts","webpack://@imdong/flarum-ext-anti-change-email/external root \"flarum.core.compat['common/app']\"","webpack://@imdong/flarum-ext-anti-change-email/external root \"flarum.core.compat['common/extend']\"","webpack://@imdong/flarum-ext-anti-change-email/external root \"flarum.core.compat['common/extenders']\"","webpack://@imdong/flarum-ext-anti-change-email/external root \"flarum.core.compat['common/models/User']\"","webpack://@imdong/flarum-ext-anti-change-email/external root \"flarum.core.compat['forum/app']\"","webpack://@imdong/flarum-ext-anti-change-email/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@imdong/flarum-ext-anti-change-email/webpack/bootstrap","webpack://@imdong/flarum-ext-anti-change-email/webpack/runtime/compat get default export","webpack://@imdong/flarum-ext-anti-change-email/webpack/runtime/define property getters","webpack://@imdong/flarum-ext-anti-change-email/webpack/runtime/hasOwnProperty shorthand","webpack://@imdong/flarum-ext-anti-change-email/webpack/runtime/make namespace object","webpack://@imdong/flarum-ext-anti-change-email/./forum.ts"],"sourcesContent":["import app from 'flarum/common/app';\n\ntype TranslatorParameters = Record<string, unknown>;\n\n/**\n * 统一前缀\n */\nexport const extPrefix = 'imdong-anti-change-email'\n\n/**\n * 获取一个 key\n * @param key\n */\nexport function key(key: string): string {\n  return `${extPrefix}.${key.replace(/^\\.*/, '')}`\n}\n\n/**\n * 获取特定 key 的翻译\n * @param id\n * @param parameters\n */\nexport function trans(id: string, parameters: TranslatorParameters = {}) {\n  return app.translator.trans(key(id), parameters);\n}\n\nexport default {\n  extPrefix,\n  key,\n  trans\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\n\nexport default [\n  new Extend.Model(User).attribute<boolean>('canChangeEmail'),\n];\n","import app from 'flarum/forum/app';\nimport {extPrefix} from \"../common\";\nimport {extend} from 'flarum/common/extend';\nimport SettingsPage from \"flarum/forum/components/SettingsPage\";\n\nexport { default as extend } from './extend';\n\napp.initializers.add(extPrefix, () => {\n\n  extend(SettingsPage.prototype, 'accountItems', function (items) {\n    if (!this.user.canChangeEmail()) {\n      items.remove('changeEmail')\n    }\n  })\n\n});\n","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/extenders'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/SettingsPage'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/forum';\n"],"names":["app","extPrefix","key","replace","trans","id","parameters","translator","Extend","User","Model","attribute","extend","SettingsPage","default","initializers","add","prototype","items","user","canChangeEmail","remove"],"sourceRoot":""}